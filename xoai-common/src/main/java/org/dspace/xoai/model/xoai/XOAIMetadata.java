/*
 * The contents of this file are subject to the license and copyright
 * detailed in the LICENSE and NOTICE files at the root of the source
 * tree and available online at
 *
 * http://www.dspace.org/license/
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="client://java.sun.com/xml/jaxb">client://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.27 at 01:16:00 PM WEST 
//

package org.dspace.xoai.model.xoai;

import java.util.List;

public class XOAIMetadata {

    private static final String DEFAULT_FIELD = "value";

//    public static XOAIMetadata parse (InputStream inputStream) throws XmlReaderException {
//        XmlReader reader = new XmlReader(inputStream);
//        XOAIMetadata XOAIMetadata = new XOAIMetadata();
//        if (!reader.next(aStartElement()).current(allOf(aStartElement(), elementName(localPart(equalTo("metadata"))))))
//            throw new XmlReaderException("Invalid XML. Expecting entity 'metadata'");
//
//        while (reader.next(anElement()).current(aStartElement())) {
//            if (reader.current(elementName(localPart(equalTo("element"))))) // Nested element
//                XOAIMetadata.withElement(Element.parse(reader));
//            else throw new XmlReaderException("Unexpected element");
//        }

//        if (!reader.current(allOf(anEndElement(), elementName(localPart(equalTo("metadata"))))))
//            throw new XmlReaderException("Invalid XML. Expecting end of entity 'metadata'");
//
//        reader.close();
//        return null;
//    }

    private final List<Element> elements;

    public XOAIMetadata(List<Element> elements) {
        this.elements = elements;
    }

    public List<Element> getElements() {
        return elements;
    }
}
